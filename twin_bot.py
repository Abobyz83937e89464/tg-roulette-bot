from telethon import TelegramClient, events
import sqlite3
import asyncio

# === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –¢–í–ò–ù–ö–ê ===
API_ID = 29787074
API_HASH = 'b559ef4d37543417bdc4fb64fd50ff40'
PHONE = '+16363513308'  # –ó–ê–ú–ï–ù–ò –ù–ê –ù–û–ú–ï–† –¢–í–ò–ù–ö–ê
PASSWORD = '–ü–µ–ª—å–º–µ–Ω–∏'

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
ALLOWED_AMOUNTS = [15, 25, 100]

# === –ë–ê–ó–ê –î–ê–ù–ù–´–• === 
def init_db():
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS users
                 (user_id INTEGER PRIMARY KEY, username TEXT, stars INTEGER)''')
    conn.commit()
    conn.close()

def get_user(user_id):
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user = c.fetchone()
    conn.close()
    return user

def update_stars(user_id, stars):
    conn = sqlite3.connect('users.db')
    c = conn.cursor()
    c.execute("UPDATE users SET stars=? WHERE user_id=?", (stars, user_id))
    conn.commit()
    conn.close()

# === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –¢–í–ò–ù–ö–ê ===
async def main():
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = TelegramClient('twin_session', API_ID, API_HASH)
    
    @client.on(events.NewMessage(pattern='!–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (\d+)'))
    async def handle_deposit(event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã !–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ"""
        try:
            amount = int(event.pattern_match.group(1))
            sender = await event.get_sender()
            
            if amount not in ALLOWED_AMOUNTS:
                await event.reply(
                    f"‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞! –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: {', '.join(map(str, ALLOWED_AMOUNTS))}"
                )
                return
            
            await event.reply(
                f"üí´ –ó–∞–ø—Ä–æ—à–µ–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ {amount} –∑–≤–µ–∑–¥!\n\n"
                "üéÅ **–û–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –ø–æ–¥–∞—Ä–æ–∫!**\n"
                "–ö–∏–Ω—å—Ç–µ —Å–µ—Ä–¥—Ü–µ ‚ù§Ô∏è –ª–∏–±–æ –ª—é–±–æ–π –ø–æ–¥–∞—Ä–æ–∫ –Ω—É–∂–Ω–æ–π —Å—É–º–º—ã!\n\n"
                "–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞ –∑–≤—ë–∑–¥—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏—Å–ª–µ–Ω—ã!"
            )
            print(f"üí∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: {amount} –∑–≤–µ–∑–¥ –æ—Ç {sender.username}")
            
        except Exception as e:
            await event.reply("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞")
            print(f"–û—à–∏–±–∫–∞: {e}")
    
    @client.on(events.NewMessage)
    async def handle_gift(event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∞—Ä–∫–æ–≤"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –ø–æ–¥–∞—Ä–æ–∫ (—Å—Ç–∏–∫–µ—Ä –∏–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞)
        is_gift = (
            event.message.sticker or 
            any(word in (event.message.text or '').lower() for word in ['—Å–µ—Ä–¥—Ü–µ', '–ø–æ–¥–∞—Ä–æ–∫', 'gift', '‚ù§Ô∏è', 'üíù'])
        )
        
        if is_gift:
            # –ò—â–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
            async for message in client.iter_messages(event.chat_id, limit=5):
                if message.text and '!–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ' in message.text:
                    try:
                        amount = int(message.text.split()[1])
                        if amount in ALLOWED_AMOUNTS:
                            user_id = event.sender_id
                            current_user = get_user(user_id)
                            
                            if current_user:
                                new_balance = current_user[2] + amount
                                update_stars(user_id, new_balance)
                                
                                await event.reply(
                                    f"üéâ –ü–ª–∞—Ç–µ–∂ –ø—Ä–∏–Ω—è—Ç!\n"
                                    f"üí´ –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞—á–∏—Å–ª–µ–Ω–æ: {amount} –∑–≤–µ–∑–¥\n"
                                    f"üí∞ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance} –∑–≤–µ–∑–¥\n\n"
                                    f"–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –±–æ—Ç–∞: @YourBotName"
                                )
                                print(f"‚úÖ –ù–∞—á–∏—Å–ª–µ–Ω–æ {amount} –∑–≤–µ–∑–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
                                
                            else:
                                await event.reply("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
                            
                            break
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: {e}")
                    break
    
    # –ó–ê–ü–£–°–ö –ö–õ–ò–ï–ù–¢–ê
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é —Ç–≤–∏–Ω–∫...")
    await client.start(phone=PHONE, password=PASSWORD)
    print("‚úÖ –¢–≤–∏–Ω–∫ –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞
    await client.run_until_disconnected()

if __name__ == '__main__':
    init_db()
    asyncio.run(main())
